{"version":3,"sources":["components/share/Section/Section.module.scss","components/share/Container/Container.module.scss","components/ContactList/ContactList.module.scss","components/share/Container/Container.jsx","components/share/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Section","title","section","section__title","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","event","setState","target","value","handleSubmit","preventDefault","props","getData","reset","onSubmit","this","htmlFor","id","type","pattern","onChange","required","Component","useStyles","makeStyles","theme","root","margin","spacing","width","list","display","justifyContent","border","borderRadius","padding","ContactList","items","onDeleteContact","classes","map","contact","ContactList__item","Button","variant","onClick","Filter","valueState","filterByName","App","contacts","filter","showModal","getDataFromContactForm","some","alert","prevState","deleteContact","contactId","changeFilter","e","toggleModal","contactsString","localStorage","getItem","contactsArray","JSON","parse","prevProps","setItem","stringify","normalizedThisFilterState","toLowerCase","visibleContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e18e2e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__325Q1\",\"section__title\":\"Section_section__title__3MCMk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__aLZCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList__item\":\"ContactList_ContactList__item__38CMt\"};","import styles from './Container.module.scss';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={styles.container}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import styles from './Section.module.scss';\r\nimport Container from '../Container';\r\n\r\nconst Section = ({ children, title, className }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <Container>\r\n        {title && <h2 className={styles.section__title}>{title}</h2>}\r\n        {children}\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport './ContactForm.module.scss';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.getData(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form\" onSubmit={this.handleSubmit}>\r\n        <h3 className=\"title\">Phonebook</h3>\r\n        <label htmlFor={this.nameInputId} className=\"form__input\">\r\n          Name:\r\n          <input\r\n            id={this.nameInputId}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor={this.numberInputId}>\r\n          Number:\r\n          <input\r\n            id={this.numberInputId}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className=\"btn\" type=\"submit\">\r\n          Add\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import styles from './ContactList.module.scss';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  container: {\r\n    width: '350px',\r\n  },\r\n  list: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '300px',\r\n    border: '1px solid grey',\r\n    borderRadius: '4px',\r\n    padding: '10px',\r\n  },\r\n}));\r\n\r\nconst ContactList = ({ items, onDeleteContact, children }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <h3 className=\"title\">ContactList</h3>\r\n      {children}\r\n      {items.map(contact => (\r\n        <li key={contact.id} className={styles.ContactList__item}>\r\n          <p>{contact.name}</p>\r\n          <p>{contact.number}</p>\r\n          <Button\r\n            variant=\"contained\"\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(contact.id)}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </li>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\n\r\nconst Filter = ({ valueState, filterByName }) => {\r\n  return (\r\n    <label className=\"filter\">\r\n      Filter by name:{' '}\r\n      <input type=\"text\" value={valueState} onChange={filterByName} />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport Section from './components/share/Section';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n    showModal: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contactsString = localStorage.getItem('conts');\r\n    const contactsArray = JSON.parse(contactsString);\r\n\r\n    if (contactsArray) {\r\n      this.setState({ contacts: contactsArray });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      // console.log('contacts was updated');\r\n      localStorage.setItem('conts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  getDataFromContactForm = ({ name, number }) => {\r\n    if (this.state.contacts.some(contact => contact.name === name)) {\r\n      alert(`${name} is already in contacts.`);\r\n      return;\r\n    }\r\n\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.setState(prevState => ({\r\n      contacts: [contact, ...prevState.contacts],\r\n    }));\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(state => ({\r\n      showModal: !state.showModal,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const normalizedThisFilterState = this.state.filter.toLowerCase();\r\n\r\n    const visibleContacts = this.state.contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedThisFilterState),\r\n    );\r\n\r\n    return (\r\n      <Section>\r\n        <ContactForm getData={this.getDataFromContactForm} />\r\n        <ContactList\r\n          items={visibleContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        >\r\n          <Filter\r\n            valueState={this.state.filter}\r\n            filterByName={this.changeFilter}\r\n          />\r\n        </ContactList>\r\n      </Section>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './styles/main.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}